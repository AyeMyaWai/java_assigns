package com.example;

import java.io.*;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.*;
import java.util.stream.Collectors;

public class Student implements Attendance, Serializable  {
	int studentId;
	String studentName;
	char attendanceStatus;

	static List<Student> studentList = new ArrayList<Student>();

	public int getStudentId() {
		return studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public char getAttendanceStatus() {
		return attendanceStatus;
	}

	public void setAttendanceStatus(char attendanceStatus) {
		this.attendanceStatus = attendanceStatus;
	}

	public Student(int studentId, String studentName, char attendanceStatus) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.attendanceStatus = attendanceStatus;
	}

	public Student() {

	}

	@Override
	public void viewAttendance() {
		//String fileName = "C:/Users/Dell/Desktop/attendance2.txt";
		// TODO Auto-generated method stub
		
		try {
			 
            // Creating the object
			Student student1 = new Student(1, "Taro", ' ');
			Student student2 = new Student(2, "Hanako", ' ');
			Student student3 = new Student(3, "Sato", ' ');
			Student student4 = new Student(4, "Nanase", ' ');
			studentList.add(student1);
			studentList.add(student2);
			studentList.add(student3);
			studentList.add(student4);
 
            // Creating stream and writing the object
            FileOutputStream fout
                = new FileOutputStream("C:/Users/Dell/Desktop/attendance3.txt");
            ObjectOutputStream out
                = new ObjectOutputStream(fout);
 
            out.writeObject(student1);
            out.flush();
            // Closing the stream to free up memory space
            // using close() method
            out.close();
 
            // Display command to shown proper execution of
            // a program
            System.out.println(
                "Object stored successfully");
            FileInputStream readData = new FileInputStream("C:/Users/Dell/Desktop/attendance3.txt");
            ObjectInputStream readStream = new ObjectInputStream(readData);

            <Student> people2 = (<Student>) readStream.readObject();
            readStream.close();
            System.out.println(people2.toString());
        }
 
        // Catch block to handle the exceptions
        catch (Exception e) {
 
            // Print and display the exception on the
            // console
            System.out.println(e);
        }
    }
	

	@Override
	public void markAttendance() {
		// TODO Auto-generated method stub

		// saveStudentInFile(studentList);
		checkStudent();

	}

	private static void saveStudentInFile(List<Student> studentList2) {
		FileOutputStream fout;
		try {
			fout = new FileOutputStream("C:/Users/Dell/Desktop/attendance2.txt");
			ObjectOutputStream oos = new ObjectOutputStream(fout);
			oos.writeObject(studentList2);
			fout.close();

		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public void readFile(String fileName) throws Exception {
		FileInputStream fin = new FileInputStream(fileName);
		ObjectInputStream ois = new ObjectInputStream(fin);
		List<Student> clubs = (List<Student>) ois.readObject();
		fin.close();
	}

	public void checkStudent() {
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Enter The Student ID");
		String userinput;
		try {
			userinput = reader.readLine();
			List<Student> filterStudent = studentList.stream()
					.filter(data -> data.studentId == Integer.parseInt(userinput)).collect(Collectors.toList());
			if (filterStudent.size() > 0) {
				System.out.println("Enter The attendance status (p or a)");
				String attendanceStatus = reader.readLine();

			} else {
				System.out.println("Please Enter the correct student ID");
				checkStudent();
			}
		} catch (NumberFormatException | IOException e) {
			// TODO Auto-generated catch block
			System.out.print("Please enter the number");
			checkStudent();
			// e.printStackTrace();
		}

	}
}
